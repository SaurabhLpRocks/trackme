{"version":3,"sources":["controller/test.ts"],"names":["UserMessage","UserMessage.constructor","UserMessage.name","UserMessage.message"],"mappings":"AAAA,YAAY,CAAC;AAQb;IAGCA,qBAAYA,OAAeA;QAC1BC,IAAIA,IAAIA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,OAAOA,CAACA,CAACA;QAE/BA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,IAAIA,IAAIA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA,CAACA;YACjCA,MAAMA,IAAIA,KAAKA,CAACA,oCAAoCA,GAAGA,OAAOA,CAACA,CAACA;QACjEA,CAACA;QAEDA,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA;IAClBA,CAACA;IAEDD,sBAAIA,6BAAIA;aAARA;YACCE,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA;QACvBA,CAACA;;;OAAAF;IAEDA,sBAAIA,gCAAOA;aAAXA;YACCG,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,OAAOA,CAACA;QAC1BA,CAACA;;;OAAAH;IACFA,kBAACA;AAADA,CApBA,AAoBCA,IAAA;AApBY,mBAAW,cAoBvB,CAAA","file":"controller/test.js","sourcesContent":["'use strict';\r\n\r\ninterface Message {\r\n\tname: string;\r\n\tmessage: string;\r\n}\r\n\r\n\r\nexport class UserMessage implements Message {\r\n\tprivate data: { name: string; message: string };\r\n\r\n\tconstructor(payload: string) {\r\n\t\tvar data = JSON.parse(payload);\r\n\r\n\t\tif (!data.name || !data.message) {\r\n\t\t\tthrow new Error('Invalid message payload received: ' + payload);\r\n\t\t}\r\n\r\n\t\tthis.data = data;\r\n\t}\r\n\r\n\tget name(): string {\r\n\t\treturn this.data.name;\r\n\t}\r\n\r\n\tget message(): string {\r\n\t\treturn this.data.message;\r\n\t}\r\n}"],"sourceRoot":"/source/"}