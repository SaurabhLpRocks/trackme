{"version":3,"sources":["controller/developerController.ts"],"names":[],"mappings":"AACA,IAAO,SAAS,WAAW,8BAA8B,CAAC,CAAC;AAE3D,IAAI,mBAAmB,GAAG;IACtB,iBAAiB,EAAE,UAAC,GAAY,EAAE,GAAa;QAC3C,SAAS,CAAC,MAAM,CAAC;YACb,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;YACrB,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;YACrB,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;YACrB,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;YAC3B,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG;YACjB,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,UAAU;YAC/B,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW;YACjC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;YAC3B,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;YAC3B,OAAO,EAAE,EAAE;SACd,EAAE,UAAC,GAAG,EAAE,SAAS;YACd,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACzB,CAAC;YACD,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,OAAO,EAAE,UAAC,GAAY,EAAE,GAAa;QACjC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG,EAAE,IAAI;YACjE,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,YAAY,EAAE,UAAC,GAAY,EAAE,GAAa;QACtC,SAAS,CAAC,IAAI,CAAC,UAAS,GAAG,EAAE,IAAI;YAC7B,EAAE,CAAC,CAAC,GAAG,CAAC;gBACJ,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAC9B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,eAAe,EAAE,UAAC,GAAY,EAAE,GAAa;QACzC,IAAI,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;QACzB,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG,EAAE,IAAI;YAC7C,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9B,IAAI,CAAC,KAAK,GAAC,SAAS,CAAC,KAAK,CAAC;YAC3B,IAAI,CAAC,KAAK,GAAC,SAAS,CAAC,KAAK,CAAC;YAC3B,IAAI,CAAC,KAAK,GAAC,SAAS,CAAC,KAAK,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAC,SAAS,CAAC,UAAU,CAAC;YACrC,IAAI,CAAC,WAAW,GAAC,SAAS,CAAC,WAAW,CAAC;YACvC,IAAI,CAAC,QAAQ,GAAC,SAAS,CAAC,QAAQ,CAAC;YACjC,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;CACJ,CAAA;AAED,iBAAS,mBAAmB,CAAC","file":"controller/developerController.js","sourcesContent":["/// <reference path=\"../../../typings/tsd.d.ts\"/>\r\nimport Developer = require('../model/developer/developer');\r\nimport {Request, Response} from \"express\";\r\nlet delevoperController = {\r\n    registerDeveloper: (req: Request, res: Response) => {\r\n        Developer.create({\r\n            fName: req.body.fName,\r\n            lName: req.body.lName,\r\n            email: req.body.email,\r\n            mobileNo: req.body.mobileNo,\r\n            dob: req.body.dob,\r\n            experience: req.body.experience,\r\n            designation: req.body.designation,\r\n            userName: req.body.userName,\r\n            password: req.body.password,\r\n            project: [],\r\n        }, (err, developer) => {\r\n            if (err) {\r\n                return res.send(err);\r\n            }\r\n            return res.send(developer);\r\n        });\r\n    },\r\n    getUser: (req: Request, res: Response) => {\r\n        Developer.findById(req.params.id).populate('project').exec((err, data) => {\r\n            if (err) return res.send(err);\r\n            return res.send(data);\r\n        });\r\n    },\r\n    getDeveloper: (req: Request, res: Response) => {\r\n        Developer.find(function(err, data) {\r\n            if (err)\r\n                return res.send(500, err);\r\n            return res.send(data);\r\n        });\r\n    },\r\n    updateDeveloper: (req: Request, res: Response) => {\r\n        let developer = req.body;\r\n        Developer.findById(developer._id).exec((err, data) => {\r\n            if (err) return res.send(err);\r\n            data.fName=developer.fName;\r\n            data.lName=developer.lName;\r\n            data.email=developer.email;\r\n            data.experience=developer.experience;\r\n            data.designation=developer.designation;\r\n            data.mobileNo=developer.mobileNo;\r\n            data.save();\r\n            return res.send(data);\r\n        });\r\n    },\r\n}\r\n\r\nexport = delevoperController;\r\n\r\n"],"sourceRoot":"/source/"}