{"version":3,"sources":["components/effort/effort.ts"],"names":["EffortComponent","EffortComponent.constructor","EffortComponent.setTask","EffortComponent.addTask","EffortComponent.getTaskByProject","EffortComponent.completeTask","EffortComponent.changeHistoryProject","EffortComponent.pageChanged","EffortComponent.changeNoOfPages"],"mappings":"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","file":"components/effort/effort.js","sourcesContent":["import {Component, View, Inject} from 'angular2/core';\r\nimport {NgFor} from 'angular2/common';\r\nimport {ProjectService} from '../../services/projectService'\r\nimport {TaskService} from '../../services/taskService'\r\n//\r\nimport { TAB_COMPONENTS, PAGINATION_COMPONENTS  } from 'ng2-bootstrap/ng2-bootstrap';\r\n//\r\nimport {GlobalDataService} from '../../services/globalDataService';\r\n//\r\nimport {LoginComponent} from '../login/login';\r\n@Component({\r\n    selector: 'effort',\r\n    providers: [ProjectService, TaskService]\r\n})\r\n@View({\r\n    templateUrl: '/scripts/src/components/effort/effort.html',\r\n    directives: [NgFor, TAB_COMPONENTS, PAGINATION_COMPONENTS, LoginComponent]\r\n})\r\nexport class EffortComponent {\r\n    projects: {};\r\n    newTask: {\r\n        project: string,\r\n        developer: string,\r\n        title: string,\r\n        description: string;\r\n        complitionDate: Date;\r\n        time: number\r\n    };\r\n    tasks: any;\r\n    histroyTasks: any;\r\n    globalDataService: any;\r\n\r\n    private totalItems: number = 10;\r\n    private historyTotalItems: number = 10;\r\n    private currentPage: number = 1;\r\n    private historyCurrentPage: number = 1;\r\n    private maxSize: number = 5;\r\n    private limit: number = 2;\r\n\r\n    constructor(\r\n        @Inject(ProjectService) private projectService: ProjectService,\r\n        @Inject(TaskService) private taskService: TaskService\r\n    ) {\r\n        this.tasks = [];\r\n        this.histroyTasks = [];\r\n        this.globalDataService = GlobalDataService;\r\n        this.projectService.get((res) => {\r\n            this.projects = res;\r\n            this.getTaskByProject(this.projects[0]._id, 'Incomplete', 1);\r\n        }, (e) => { });\r\n        this.setTask();\r\n    }\r\n    setTask(): void {\r\n        this.newTask = {\r\n            project: \"\",\r\n            developer: \"\",\r\n            title: \"\",\r\n            description: \"\",\r\n            complitionDate: null,\r\n            time: null\r\n        };\r\n    }\r\n    addTask(): void {\r\n        this.newTask.developer = this.globalDataService.dev._id;\r\n        this.taskService.post(this.newTask, (res) => {\r\n            console.log(res);\r\n            this.setTask();\r\n        }, (e) => { });\r\n    }\r\n    getTaskByProject(project, status: string, page: number = 1): void {\r\n        console.log('getTaskByProject');\r\n        this.taskService.get('project=' + project + '&developer=' + this.globalDataService.dev._id + '&status=' + status + '&page=' + page + '&limit=' + this.limit, (res) => {\r\n            if (status == 'Incomplete') {\r\n                this.tasks = res.docs;\r\n                this.totalItems = res.total;\r\n            } else {\r\n                this.histroyTasks = res.docs;\r\n                this.historyTotalItems = res.total;\r\n            }\r\n        }, (e) => { });\r\n    }\r\n    completeTask(task, project: string): void {\r\n        task.status = 'Complete';\r\n        this.taskService.updateTask(task, (res) => {\r\n            this.getTaskByProject(project, 'Incomplete', 1);\r\n        }, (e) => { });\r\n    }\r\n    changeHistoryProject() {\r\n        console.log('changeHistoryProject');\r\n        this.historyCurrentPage = 1;\r\n    }\r\n    private pageChanged(event: any, project: string, status: string): void {\r\n        console.log('pageChanged');\r\n        this.getTaskByProject(project, status, event.page);\r\n    };\r\n    private changeNoOfPages(project: string, status: string) {\r\n        this.getTaskByProject(project, status, 1);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}